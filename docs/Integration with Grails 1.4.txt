The Plan
========

Refactor
=========

- ResourceService needs to become ResourcesManager class in src/groovy, added to spring ctx as grailsResourcesManager
- change package on all source to org.grails.plugin.resources.* from the singular org.grails.plugin.resource
- Pull cacheandhash and zip into core (double check)
DONE - Rename r:resourceLink to r:external, add deprecated for original

Adapting existing stuff
=======================

DONE g:resource -> detect resourceService and call into r:resource if present
DONE g:img -> new tag, calling into g:resource
DONE g:javascript -> detect resourceService and delegate to r:script as needed
DONE g:external

ON HOLD: Deprecate g:createLink, add g:url (nothing to do with resources...)
CANCELLED Adapt g:link to do resourceLink functionality (minus resources - see doResourceLink
in resources taglib), delegating to r:resourceLink if resources installed

All other resource-linking tags should be fine, deferring to g:resource

Work
=============
DONE * Killswitch
DONE * data: url bugfix
* other critical bug fixes
DONE * deprecate r:use & r:resourceLink ---> r:require
DONE * finalize noXXXX convention
* final 1.0 release of resources
* final releases of cached&zipped

* Document plugin with gdoc + expose on github
* overhaul plugin portal docs

Documentation
=============

DONE * Preference is to use r:xxx tags, g:resource/g:img/g:external pass through extra layer
DONE * Update docs for g:resource
DONE * Update docs for g:javascript
DONE * Add docs for g:external
DONE * Add guide documentation to grails core, linking to plugin docs

